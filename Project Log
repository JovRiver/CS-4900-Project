//A log for all changes made to the project

//Format:
//Month/Day/Year
//Programmer Name:
//Programmer Commit #:
//
//  Changes made/sources if used.

Jan/22/2020
Ryan Slaybaugh:
Commit 1:

  Added three planes for player movement testing. Also added collision physics for player interaction.
Attempted to create two ramps out of two of the planes but ran into issues with collision phyics. Still
unresolved. Sources for collision physics code is the same code used for the base plane currently in the
main code provided by Michael. Main purpose of this code is to get a better understanding of collision 
physics and object placement. No plans to use this code in final build.


Jan/24/2020
Ryan Slaybaugh:
Commit 2:

  Added two new objects, a box and a ramp. The box provides collision for player character movement testing
such as jumping. The ramp has a rotated collision box, but there are a few issues that need to be worked out, 
such as imperfect alignment with visual ramp and awkward friction for player movement. Collision code recycled
from previous object collision code.


Jan/25/2020
Ryan Slaybaugh
Commit 3:

  Moved createObstacles() code to a new file named gamestage.js and renamed function call to createGameStage().
Added a function called createTestGround() for the obstacle objects and a createDynamicGround() for new platform 
testing inside the createGameStage() function. createDynamicGround() currently adds 10 new 5x2x5 cubes in 
preparation for object movement testing. Tidied up code for already created objects to make it easier to 
differentiate between objects. No collision code added to the squares.


Jan/26/2020
Ryan Slaybaugh
Commit 4:

  Tested out creating objects using a for loop. I first created a var str called box, and then used the iterative
number from the for loop and concatenated it to str box. This creates new a new numbered box string. Then I created 
objects using this str and manipulated the position with some math to place each object in a different location. I also
created a flat collision plane to encompass all 10 boxes, rather than creating an individual collision plane for each box.



