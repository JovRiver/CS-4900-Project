//A log for all changes made to the project

//Format:
//Month/Day/Year
//Programmer Name:
//Programmer Commit #:
//
//  Changes made/sources if used.

Jan/22/2020
Ryan Slaybaugh:
Commit 1:

  Added three planes for player movement testing. Also added collision physics for player interaction.
Attempted to create two ramps out of two of the planes but ran into issues with collision phyics. Still
unresolved. Sources for collision physics code is the same code used for the base plane currently in the
main code provided by Michael. Main purpose of this code is to get a better understanding of collision 
physics and object placement. No plans to use this code in final build.

Jan/23/2020
Michael Hayes
Commit 289654a9509b837736ffe677165b2b500313dc78

Merged my branch with Ryans changes. 

Jan/24/2020
Ryan Slaybaugh:
Commit 2:

  Added two new objects, a box and a ramp. The box provides collision for player character movement testing
such as jumping. The ramp has a rotated collision box, but there are a few issues that need to be worked out, 
such as imperfect alignment with visual ramp and awkward friction for player movement. Collision code recycled
from previous object collision code.


Jan/25/2020
Ryan Slaybaugh
Commit 3:

  Moved createObstacles() code to a new file named gamestage.js and renamed function call to createGameStage().
Added a function called createTestGround() for the obstacle objects and a createDynamicGround() for new platform 
testing inside the createGameStage() function. createDynamicGround() currently adds 10 new 5x2x5 cubes in 
preparation for object movement testing. Tidied up code for already created objects to make it easier to 
differentiate between objects. No collision code added to the squares.


Jan/26/2020
Ryan Slaybaugh
Commit 4:

  Tested out creating objects using a for loop. I first created a var str called box, and then used the iterative
number from the for loop and concatenated it to str box. This creates new a new numbered box string. Then I created 
objects using this str and manipulated the position with some math to place each object in a different location. I also
created a flat collision plane to encompass all 10 boxes, rather than creating an individual collision plane for each box.


Jan/28/2020
Michael Hayes
Commit 5736b7705927b67cf36675919cf328ba9842774c

Background music was added to the game. 
Known issues: Background music does not play when clicking to play too quickly.
Possible Solution: Create a loader to preload everything before calling functions to draw scene.


Jan/28/2020
Michael Hayes
Commit 0c6e72d20cc2ce57bd0c49827304181098e30cc0

Added stats js to the game. This will allow us to track the FPS of the game and see how new additions affect framerate. 
Known issues: None
Possible Solution: None.


Jan/28/2020
Michael Hayes
Commit 4d404366deacad46d2d87032bd86e3030aa749a7

Added code for stats js. Linked the camera to the player object. This allows the camera to move to the positions of the playerobject
as to keep the physics of the player object. Following the player object with the camera is the best way to implement First Person. 
Known issues: Currently the camera is stationary and cannot be moved with pointerlock controls.
Possible Solution: Change directional movement based on the angular change of the camera with pointerlock controls.



Jan/28/2020
Ryan Slaybaugh:
Commit 5:

  Added a new torus object to be used for future starting platform. Also attempted to add objects to scene after render, but currently
does not work. Will test further for a solution. Also updated the index.html file, adding <script src="./game/main.js"></script>, in
order for the program to register the gamestage.js file.


1/29/2020
Semira Pinder:
Commit 1:

I added a loader for the models that we will use later in the game.

1/29/2020
Semira Pinder
Commit 2:
Added a loading percentage in the middle center of the screen while it loads a model. After it hits 100%,
it clears the message.